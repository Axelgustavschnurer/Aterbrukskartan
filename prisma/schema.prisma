// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model MapItem {
  id           Int      @id @default(autoincrement())
  name         String?
  organisation String?
  year         Int?
  latitude     Float?
  longitude    Float?
  address      String?
  postcode     Int?
  city         String?
  story        Story?
  recycle      Recycle?

  @@map("map_item")
}

// `@db.NVarChar(4000)` allow longer strings (up to 4000 "standard" unicode characters) than the default 1000 max length
model Story {
  id                      Int     @id @default(autoincrement())
  mapId                   Int     @unique @map("map_id")
  categorySwedish         String? @map("category_swedish")
  categoryEnglish         String? @map("category_english")
  educationalProgram      String? @map("educational_program")
  descriptionSwedish      String? @map("description_swedish") @db.NVarChar(4000)
  descriptionEnglish      String? @map("description_english") @db.NVarChar(4000)
  descriptionSwedishShort String? @map("description_swedish_short")
  descriptionEnglishShort String? @map("description_english_short")
  openData                String? @map("open_data") @db.NVarChar(4000)
  reports                 String? @db.NVarChar(4000)
  videos                  String? @db.NVarChar(4000)
  pdfCase                 String? @map("pdf_case") @db.NVarChar(4000)
  isEnergyStory           Boolean @default(true) @map("is_energy_story")
  mapItem                 MapItem @relation(fields: [mapId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("story")
}

model Recycle {
  id                  Int     @id @default(autoincrement())
  mapId               Int     @unique @map("map_id")
  month               Int?
  projectType         String  @map("project_type")
  description         String? @db.NVarChar(4000)
  contact             String? @db.NVarChar(4000)
  externalLinks       String? @map("external_links") @db.NVarChar(4000)
  availableMaterials  String? @map("available_materials")
  lookingForMaterials String? @map("looking_for_materials")
  mapItem             MapItem @relation(fields: [mapId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("recycle")
}

// This table contains the list of organisations that are allowed to add Recycle items to the map, they will be shown in a dropdown list when adding a new Recycle item
model RecycleOrganisation {
  id   Int    @id @default(autoincrement())
  name String

  @@map("recycle_organisation")
}
